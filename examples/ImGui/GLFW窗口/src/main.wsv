<火山程序 类型 = "通常" 版本 = 1 />

包 火山.程序 <注释 = "请将项目属性的\"自动支持高DPI\"设置为真"
        @视窗.附属文件 = "..\\..\\Resource\\MyImage02.jpg\r\n..\\..\\Resource\\MyImage03.jpg">

类 启动类 <公开 基础类 = 程序类 折叠>
{
    变量 主窗口对象 <类型 = 我的主窗口>

    方法 启动方法 <公开 类型 = 整数 折叠>
    {
        主窗口对象.创建主窗口 ("ImGui GLFW+" + 主窗口对象.渲染器.渲染器名称, 1280, 720, 假, 真)
        返回 (1)
    }
}

类 我的主窗口 <基础类 = IM_GLFW窗口 注释 = "\"模板类型1\"为所使用的渲染器类型,支持以下的渲染器:" 注释 = "  IM_OpenGL渲染器  IM_Vulkan渲染器"
        @模板实现类 = "IM_OpenGL渲染器">
{
    变量 组合框现行项 <类型 = 整数>
    变量 项目数组 <类型 = IM文本数组类>
    变量 图片信息 <类型 = "IM图片信息类 [3]">

    方法 我的主窗口_创建完毕 <接收事件 类型 = 整数 注释 = "在窗口创建完毕后发送一次此事件,用于对窗口进行额外的设置." 注释 = " 1. 此时窗口尚未首次显示;"
            注释 = " 2. 此时ImGui和渲染器尚未初始化,请勿调用相关命令." 折叠>
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        // 本对象.显示边框 = 假  // 隐藏标题栏和边框
        背景颜色.w = 0.6
        调试输出 ("创建完毕")
        // 测试加入不同的文本类型
        变量 文本变量 <类型 = 文本型 值 = "火山文本型变量">
        项目数组.加入成员 (文本变量, "火山文本常量", 文本到UTF8 ("UTF-8字节集"), 创建文本对象U ("UTF-8文本对象"), 创建文本对象W ("UTF16-LE文本对象"), 创建文本视图W ("UTF16-LE文本视图"), 创建文本视图U ("UTF-8文本视图"))
        项目数组.加入成员2 ("UTF-8字面量")

        返回 (0)
    }

    方法 我的主窗口_初始化配置 <接收事件 类型 = 整数 注释 = "在ImGui创建完毕后发送一次此事件,用于设置ImGui的IO和字体等参数."
            返回值注释 = "返回1表示使用浅色样式,2为经典样式,其他任意值为默认的深色样式." 折叠>
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    参数 IO <类型 = ImGuiIO类 注释 = "ImGui的输入输出结构">
    参数 字体图集 <类型 = IM字体图集类 注释 = "请在此添加字体(默认未添加任何字体,未添加中文字体将无法显示汉字).">
    {
        // IO.INI文件名 = ""  // 空文本可禁止生成 imgui.ini,或修改ini的文件名
        位或 (IM子窗口标志.始终自动调整大小, IM子窗口标志.始终启用窗口内边距)

        变量 微软雅黑 <类型 = 文本型>
        变量 按需渲染字体 <类型 = 逻辑型 值 = 假>
        // 注意部分老系统的微软雅黑是 ttf 格式,最好先判断一下
        微软雅黑 = 选择 (文件是否存在 (取特定目录 (特定目录类型.系统字体) + "msyh.ttc"), 取特定目录 (特定目录类型.系统字体) + "msyh.ttc", 取特定目录 (特定目录类型.系统字体) + "msyh.ttf")
        如果 (按需渲染字体 == 假)
        {
            // 这个写法会渲染字体中的所有汉字,所以非常占内存(50MB以上),而且字体像素大小越大,越占内存.
            字体图集.添加字体文件 (微软雅黑, 18.0, IM字形范围.中文)
        }
        否则
        {
            // 下面演示第二种写法,按需渲染字体,但不适合带输入框的界面(因为你无法预料用户会输入什么内容).
            变量 字形范围 <类型 = IM字形范围构建类>
            变量 界面用字 <类型 = 文本型
                    值 = "。中之他件体你使保做入其出击删别前加单卡取变口号合名后图在均型女如姓字存学实对将山帧常平年度建开引性成或打执择按撤数文新时显景本构果染格框次添渲演火点片生用男示窗籍索组编背色节行表要视请象载辑输退选速重量钮销除集需面项颜龄">
            字形范围.加入范围 (IM字形范围.默认)  // 首先要添加字母数字的字形范围
            字形范围.加入字符 ('量')  // 加入单个字
            字形范围.加入文本U (_u8 ("你好,火山!"))  // 加入UTF-8文本(支持输入多种文本格式,但内部会转换编码一到两次,如非必须不推荐使用)
            字形范围.加入文本 (界面用字)  // 加入UTF-16文本(无需转换编码)
            字体图集.添加字体文件Ex (微软雅黑, 18.0, 字形范围)

        }
        返回 (0)
    }

    方法 我的主窗口_准备渲染 <接收事件 类型 = 整数 注释 = "在ImGui开始渲染前发送一次此事件,可用于加载图片(渲染器不能在此事件之前加载图片)." 折叠>
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    参数 样式配置 <类型 = IM样式类 注释 = "ImGui的样式配置">
    {
        // 加载图片
        变量 图片资源 <类型 = 视窗文件资源 值 = "..\\..\\Resource\\MyImage01.jpg" 注释 = "MyImage01" "">
        变量 图片数据 <类型 = 字节集类 注释 = "MyImage02">
        变量 图片文件名 <类型 = 文本型 注释 = "MyImage03">
        图片数据.从文件读字节集 (取运行目录 () + "MyImage02.jpg")
        图片文件名 = 取运行目录 () + "MyImage03.jpg"
        渲染器.加载图片资源 (图片资源, 图片信息 [0])  // 方法一
        渲染器.加载图片文件 (图片文件名, 图片信息 [1])  // 方法二
        渲染器.加载图片字节集 (图片数据, 图片信息 [2])  // 方法三
        返回 (0)
    }

    方法 我的主窗口_即将渲染 <接收事件 类型 = 整数 注释 = "当ImGui帧数据被渲染前发送此事件,请在本事件内设计ImGui的界面布局." 注释 = "注意:"
            注释 = "  1. 本事件前后已经内部处理好新建帧和渲染等操作,你只需设计布局即可;" 注释 = "  2. ImGUI默认开启垂直同步,帧速率跟显示器的刷新率一致.比如刷新率为为60Hz,"
            注释 = "将每秒触发本事件60次,因此在此进行耗时操作将导致帧速率降低和界面卡顿,如有必要," 注释 = "请另开线程执行耗时操作;"
            注释 = "  3. 因为本事件的执行频率足够高,所以键鼠输入等事件也可以在此一起处理;" 折叠>
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        如果 (真)  // 绘制矩形
        {
            变量 主视口 <类型 = IM视口指针>
            变量 绘制列表 <类型 = IM绘制列表>
            变量 左上矩形 <类型 = ImVec2>
            变量 右下矩形 <类型 = ImVec2>
            主视口 = ImGui.取主视口 ()
            左上矩形 = 主视口.位置.加 (20, 20)
            右下矩形 = 左上矩形.加算 (主视口.尺寸).减 (40, 40)
            绘制列表 = ImGui.取背景绘制列表 (主视口)
            绘制列表.添加矩形 (左上矩形, 右下矩形, IM颜色类.RGB到RGBA (颜色类.红色), , , 2.0)
        }

        变量 显示演示窗口 <静态 类型 = 逻辑型 值 = 真>
        ImGui.创建窗口 (_u8 ("你好,火山!"), , IM窗口标志.菜单栏)
        {
            ImGui.创建菜单栏 ()
            {
                ImGui.创建菜单 ("文件", 真)
                {
                    ImGui.菜单项 ("打开", "Ctrl+O")
                    ImGui.菜单项 ("保存", "Ctrl+S")
                }
                ImGui.创建菜单 ("编辑", 真)
                {
                    ImGui.菜单项 ("撤销", "Ctrl+Z", , 假)
                    ImGui.菜单项 ("重做", "Ctrl+Y", , 假)
                }
                如果 (ImGui.菜单项 ("退出") == 真)
                {
                    本对象.关闭窗口 ()
                }
            }

            ImGui.复选框 ("显示演示窗口", 显示演示窗口)

            变量 单击次数 <静态 类型 = 整数 注释 = "部分变量要确保生命周期(看备注),应该用成员变量或设置为静态">
            如果 (ImGui.按钮 ("按钮##btn1"))  // 部分组件使用一样的标签会出问题,可以加"##"区分不同的组件(##和后面的文本不会显示)
            {
                单击次数 = 单击次数 + 1
            }
            ImGui.同一行 ()  // 这个命令前后的组件会在同一行布局中
            ImGui.设置项目标志 (IM项目标志.可重复按钮, 真)  // 按住不放会持续返回真
            {
                如果 (ImGui.按钮 ("按钮##btn2"))
                {
                    单击次数 = 单击次数 + 1
                }
            }
            ImGui.同一行 ()
            ImGui.文本框 ("点击次数: %d", 单击次数)

            ImGui.文本框 ("平均渲染速度: %.3f ms/frame (%.1f FPS)", 1000.0 / ImGui.取IO ().帧速率, ImGui.取IO ().帧速率)

            ImGui.颜色编辑器RGBA ("背景颜色", 本对象.背景颜色, 连续位或 (IM颜色编辑标志.显示透明条, IM颜色编辑标志.半透明预览))

            变量 选择字体提示 <静态 类型 = 标准文本类U>
            如果 (选择字体提示.是否为空 ())  // 局部静态变量需要做判断,不然每一帧都会重复加入文本
            {
                选择字体提示.加入文本 ("- 请使用 ImGui.取字体图集().添加字体文件() 加载其他字体。\n- 字体图集将在执行 ImGui.取字体图集().生成() 后构建。\n- 如果你需要实时添加或删除字体,请在 ImGui.新建帧() 之前执行。")
            }
            ImGui.字体选择器 ("选择字体")
            ImGui.同一行 ()
            ImGui.提示文本框 ("(?)", 选择字体提示)

            ImGui.组合框 ("组合框", 组合框现行项, 项目数组)

            ImGui.分组框 ()
            {
                变量 单选索引 <静态 类型 = 整数>
                如果 (ImGui.单选按钮Ex ("单选按钮1", 单选索引, 0))
                {
                    单选索引 = 0
                }
                ImGui.同一行 ()
                如果 (ImGui.单选按钮Ex ("单选按钮2", 单选索引, 1))
                {
                    单选索引 = 1
                }
                ImGui.同一行 ()
                如果 (ImGui.单选按钮Ex ("单选按钮3", 单选索引, 2))
                {
                    单选索引 = 2
                }
                ImGui.同一行 ()
                ImGui.文本框 ("选中索引: %d", 单选索引)
            }

            ImGui.选项卡栏 ("tabbar", IM选项卡栏标志.已满时添加滚动按钮)
            {
                ImGui.选项卡 ("选项卡1")
                {
                    变量 输入内容 <静态 类型 = 标准文本类U 注释 = "输入的内容会保存在此变量中">
                    ImGui.文本输入框 ("输入文本##ti1", 输入内容)

                }
                ImGui.选项卡 ("选项卡2")
                {

                }
                如果 (ImGui.选项卡按钮 ("按钮"))
                {

                }
            }

            如果 (ImGui.可折叠标题 ("图片框"))
            {
                ImGui.图片框 (图片信息 [0].纹理ID, 图片信息 [0].取尺寸 (真))
                // 下面两个缩小显示
                ImGui.图片框 (图片信息 [1].纹理ID, 图片信息 [1].取尺寸 (真).求商 (2))
                ImGui.同一行 (0.0, 0.0)  // 无间距
                ImGui.图片框 (图片信息 [2].纹理ID, 图片信息 [2].取尺寸 (真).求商 (2))

            }

            如果 (ImGui.可折叠标题 ("表格"))
            {
                ImGui表格.创建表格 ("学籍", 4, , ImVec2.创建 (0, 300))
                {
                    ImGui表格.置列属性 ("学号")
                    ImGui表格.置列属性 ("姓名")
                    ImGui表格.置列属性 ("性别")
                    ImGui表格.置列属性 ("年龄")
                    ImGui表格.冻结窗格 (4, 1)
                    ImGui表格.提交标题行 ()
                    变量 姓名数组 <静态 类型 = IM文本数组类>
                    变量 年龄数组 <静态 类型 = 整数数组类>
                    变量 性别数组 <静态 类型 = 逻辑型数组类>
                    如果 (姓名数组.是否为空 ())
                    {
                        变量 随机 <类型 = 标准随机数类>
                        计次循环 (20)
                        {
                            变量 姓名 <类型 = 文本型>
                            加入文本 (姓名, 随机.取随机百家姓 ())
                            加入文本 (姓名, 随机.取随机汉字 (2))
                            姓名数组.加入成员 (姓名)
                            年龄数组.加入成员 (随机.取随机整数 (16, 18))
                            性别数组.加入成员 (随机.取伯努利分布逻辑 ())
                        }
                    }
                    计次循环 (20)
                    {
                        ImGui表格.到下一列 ()
                        ImGui.文本框 ("%03d", 取循环索引 () + 1)
                        ImGui表格.到下一列 ()
                        ImGui.文本框 (姓名数组.取成员 (取循环索引 ()))
                        ImGui表格.到下一列 ()
                        ImGui.文本框 (选择 (性别数组.取成员 (取循环索引 ()), "男", "女"))
                        ImGui表格.到下一列 ()
                        ImGui.文本框 ("%d", 年龄数组.取成员 (取循环索引 ()))
                    }
                }
            }

        }

        如果 (显示演示窗口 == 真)
        {
            ImGui.显示演示窗口 ()
        }

        返回 (0)
    }

    方法 我的主窗口_渲染结束 <接收事件 类型 = 整数 注释 = "在ImGui停止渲染后发送一次此事件,可用于释放资源." 折叠>
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        渲染器.释放纹理 (图片信息 [0])
        渲染器.释放纹理 (图片信息 [1])
        渲染器.释放纹理 (图片信息 [2])
        返回 (0)
    }

    #
}
