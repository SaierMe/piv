<火山程序 类型 = "通常" 版本 = 1 />

包 火山.程序

类 启动类 <公开 基础类 = 窗口程序类 折叠>
{
    变量 主窗口对象 <类型 = 我的主窗口>

    方法 启动方法 <公开 类型 = 整数 折叠>
    {
        主窗口对象.创建主窗口 ()
        返回 (1)
    }
}

# ===

类 我的主窗口 <基础类 = 窗口 注释 = "样例主窗口" @视窗.布局 = "client_size = \"600, 400\"" 标题 = "日志记录测试">
{
    变量 超级编辑框_日志输出 <类型 = 超级编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 101\r\npos = \"20, 20, 560, 320\"" 是否允许多行 = 真
            只读 = 真 组件边框 = 单线边框式>
    变量 按钮_日志头 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 102\r\npos = \"166, 353, 120, 32\"" 标题 = "更改日志头">
    变量 按钮_线程 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 103\r\npos = \"312, 353, 120, 32\"" 标题 = "线程加入日志">
    变量 按钮_加入日志 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 104\r\npos = \"20, 353, 120, 32\"" 标题 = "加入日志">
    变量 按钮_异常 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 105\r\npos = \"460, 353, 120, 32\"" 标题 = "异常处理">
    变量 字符格式 <类型 = 超级编辑框字符格式>
    变量 ""
    变量 格式日志事件 <类型 = 格式日志事件类 注释 = "整个项目只能创建一个">
    变量 线程 <类型 = 线程类>

    方法 我的主窗口_创建完毕 <接收事件 类型 = 整数 注释 = "当本组件及其中所有子组件均被创建完毕后发送此事件.">
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        // 程序运行时启动日志记录器
        格式日志类.初始化 (取运行目录 () + "log.txt", 真, 0)

        格式日志类.置日志级别 (0)  // 默认为1,不会输出调试日志
        // 格式日志事件.置最小日志级别 (1)

        格式日志类.置线程名称 ("主线程")
        // 如果要输入 { 和 } 字符,需要用 {{ 和 }} 转义
        格式日志类.加入信息日志 ("{{启动时间戳}} -> 整数：{0:d}；16进制：{0:#x}；8进制：{0:#o}；2进制：{0:#b}", 取时间戳 (取现行时间 ()))
        返回 (0)
    }

    方法 按钮_被单击 <接收事件 类型 = 整数 注释 = "当按钮被单击后发送此事件" 折叠>
    参数 来源对象 <类型 = 按钮 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        如果 (来源对象 == 按钮_加入日志)
        {
            格式日志类.加入调试日志 ("我是调试日志啊啊")
            格式日志类.加入信息日志 ("我是{}{}", "信息", "测试")
            格式日志类.加入警告日志 ("我是{1}{0}", "日志", "警告")
            格式日志类.加入错误日志 ("我是{0}{1}的{1}", "错误", "日志")  // 格式替换符可以重复

        }
        否则 (来源对象 == 按钮_线程)
        {
            线程.启动 ()
            按钮_线程.禁止 = 真


        }
        否则 (来源对象 == 按钮_日志头)
        {
            格式日志类.置日志头格式 ("[{HMSf}][{s}][{g}][{L}][{t:^6}] ")


        }
        否则 (来源对象 == 按钮_异常)
        {
            // 设置刷新缓冲区的日志级别,遇到大于此级别的日志会立即刷新缓冲区,将缓冲区中的日志数据写入到日志文件中
            格式日志类.置刷新级别 (3)
            开始俘获异常 ()
            {
                变量 结果 <类型 = 整数>
                变量 除数 <类型 = 整数 值 = 0>
                结果 = 1024 / 除数

            }
            俘获所有异常 ()  // 0 除是硬件异常,需要用俘获所有异常获取,但也取不了具体的错误信息
            {
                格式日志类.加入错误日志 ("除数不能为0。")

            }
        }

        返回 (0)
    }

    方法 线程类_线程运行 <接收事件 类型 = 整数 注释 = "  用户需要接收并处理本事件以执行所需要的功能,该事件处理方法将在一个单独的线程中运行."
            注释 = "  注意: 在本事件的接收处理方法中,必须尽可能快地频繁调用本对象的\"是否需要退出\"方法,"
            注释 = "一旦发现该方法返回真,则需要尽快结束执行并返回,否则将导致另一线程中的\"停止\"方法调用" 注释 = "进入死等状态." 折叠>
    参数 来源对象 <类型 = 线程类 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        如果 (来源对象 == 线程)
        {
            格式日志类.置线程名称 (取源方法名 ())
            变量 随机数 <类型 = 标准随机数类>
            变量 随机延迟 <类型 = 整数>
            计次循环 (100)
            {
                如果 (来源对象.是否需要退出 () == 真)
                {
                    返回 (0)  // 线程中进行耗时的循环操作时,可以用这个方法中途结束线程

                }
                随机延迟 = 随机数.取随机整数 (500, 2000)
                格式日志类.加入日志 (1, "当前随机延迟{:^6}毫秒，{:0>3}/{:0>3} 次。", 随机延迟, 取循环索引 () + 1, 100)
                延时 (随机延迟)

            }
            按钮_线程.禁止 = 假

        }
        返回 (0)
    }

    方法 格式日志事件类_日志内容 <接收事件 类型 = 整数 注释 = "每次轮询后,所有线程产生的日志信息都会逐条在这里展示." 注释 = "即使日志文件未打开或已关闭,仍会响应本事件."
            注释 = "警告: 请勿在事件中执行耗时操作,以免造成阻塞." 返回值注释 = "此返回值无意义" 折叠>
    参数 来源对象 <类型 = 格式日志事件类 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    参数 时间戳 <类型 = 长整数 注释 = "纳秒级精度的19位时间戳.">
    参数 日志级别 <类型 = 字节 注释 = "0=DBG/调试; 1=INF/信息; 2=WRN/警告; 3=ERR/错误; 4=OFF/关闭.">
    参数 语句位置 <类型 = 文本型 注释 = "日志产生语句所在的源码文件名和行号.">
    参数 线程名称 <类型 = 文本型 注释 = "当前的线程ID,或用户通过\"置线程名称\"设置的名称.">
    参数 日志内容 <类型 = 文本型 注释 = "包括日志头和正文的完整日志内容,日志头可以用\"置日志头格式\"自定义.">
    参数 正文内容 <类型 = 文本型 注释 = "当前日志的正文(除去日志头的内容).">
    参数 文件位置 <类型 = 变整数 注释 = "当前日志内容在日志文件中的首位置(字节单位).">
    {
        字符格式.文本颜色 = 格式日志类.取级别颜色 (日志级别, 假)
        超级编辑框_日志输出.加入文本行 (日志内容, 字符格式, , 真)
        返回 (0)
    }

    方法 我的主窗口_将被销毁 <接收事件 类型 = 整数 注释 = "当本组件被销毁前发送此事件" 折叠>
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        线程.停止 ()  // 退出前通知退出线程
        // 结束程序之前需要手动关闭日志
        格式日志类.销毁 ()
        返回 (0)
    }
}

#
