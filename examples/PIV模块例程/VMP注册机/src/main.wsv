<火山程序 类型 = "通常" 版本 = 1 />

包 火山.程序

类 启动类 <公开 基础类 = 窗口程序类 折叠>
{
    变量 主窗口对象 <公开 类型 = 我的主窗口>

    方法 启动方法 <公开 类型 = 整数>
    {
        主窗口对象.创建主窗口 ()
        返回 (1)
    }
}

# ===

类 我的主窗口 <基础类 = 窗口 注释 = "样例主窗口" @视窗.布局 = "client_size = \"730, 580\"" 标题 = "VMProtect注册机">
{
    变量 选择框_用户名 <类型 = 选择框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 101\r\npos = \"30, 20, 120, 32\"" 标题 = "用户名">
    变量 选择框_邮箱 <类型 = 选择框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 102\r\npos = \"30, 80, 120, 32\"" 标题 = "邮箱">
    变量 选择框_到期日期 <类型 = 选择框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 103\r\npos = \"30, 140, 120, 32\"" 标题 = "到期日期">
    变量 选择框_更新期限 <类型 = 选择框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 104\r\npos = \"30, 200, 120, 32\"" 标题 = "更新期限">
    变量 选择框_运行时限 <类型 = 选择框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 105\r\npos = \"380, 20, 120, 24\"" 标题 = "运行时限">
    变量 选择框_机器码 <类型 = 选择框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 106\r\npos = \"380, 80, 120, 24\"" 标题 = "机器码">
    变量 选择框_用户数据 <类型 = 选择框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 107\r\npos = \"380, 140, 120, 24\"" 标题 = "用户数据">
    变量 编辑框_用户名 <类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 108\r\npos = \"160, 20, 200, 32\"" 禁止 = 真
            提示横幅 = "用户姓名,最长255个字">
    变量 编辑框_邮箱 <类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 109\r\npos = \"160, 80, 200, 32\"" 禁止 = 真
            提示横幅 = "用户的邮箱，最长256个字">
    变量 编辑框_用户数据 <类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 110\r\npos = \"505, 140, 200, 86\"" 禁止 = 真
            是否允许多行 = 真>
    变量 编辑框_机器码 <类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 111\r\npos = \"505, 80, 200, 32\"" 禁止 = 真
            提示横幅 = "绑定的机器码(HWID)">
    变量 编辑框_运行时限 <类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 112\r\npos = \"505, 20, 200, 32\"" 禁止 = 真
            输入方式 = 输入整数 提示横幅 = "单位分钟,最大值为255">
    变量 日期框_到期日期 <类型 = 日期框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 113\r\npos = \"160, 140, 200, 32\"" 禁止 = 真>
    变量 日期框_更新期限 <类型 = 日期框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 114\r\npos = \"160, 200, 200, 32\"" 禁止 = 真>
    变量 编辑框_序列号 <类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 115\r\npos = \"28, 315, 680, 240\"" 是否允许多行 = 真
            滚动条 = 纵向滚动条>
    变量 按钮_生成序列号 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 116\r\npos = \"30, 270, 120, 32\"" 标题 = "生成序列号">
    变量 按钮_导入密钥对 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 117\r\npos = \"180, 270, 120, 32\"" 标题 = "导入密钥对">
    变量 ""
    变量 密钥对窗口 <类型 = 导入密钥对窗口>
    变量 VMP注册机 <公开 类型 = VMP注册机类>

    方法 我的主窗口_创建完毕 <接收事件 类型 = 整数 注释 = "当本组件及其中所有子组件均被创建完毕后发送此事件.">
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        // 启动时查找是否有本地的密钥对信息,如果有则导入
        如果 (文件是否存在 (取运行目录 () + "vmp.lic"))
        {
            变量 产品信息 <类型 = 字节集类>
            产品信息.从文件读字节集 (取运行目录 () + "vmp.lic")
            VMP注册机.导入产品信息 (产品信息)

        }
        // 你也可以这样把密钥对写死在软件里
        变量 "// 产品信息" <类型 = 字节集类 @视窗.值文件 = "vmp.lic">
        // VMP注册机.导入产品信息 (产品信息)


        返回 (0)
    }

    方法 我的主窗口_将被销毁 <接收事件 类型 = 整数 注释 = "当本组件被销毁前发送此事件" 折叠>
    参数 来源对象 <类型 = 我的主窗口 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        // 退出前将密钥对等产品信息保存到文件里
        变量 产品信息 <类型 = 字节集类>
        产品信息 = VMP注册机.导出产品信息 ()
        产品信息.写字节集到文件 (取运行目录 () + "vmp.lic")

        返回 (0)
    }

    方法 选择框_被单击 <接收事件 类型 = 整数 注释 = "当按钮被单击后发送此事件" 折叠>
    参数 来源对象 <类型 = 选择框 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        如果 (来源对象 == 选择框_用户名)
        {
            如果 (来源对象.选中)
            {
                编辑框_用户名.禁止 = 假
            }
            否则
            {
                编辑框_用户名.禁止 = 真
            }

        }
        否则 (来源对象 == 选择框_邮箱)
        {
            如果 (来源对象.选中)
            {
                编辑框_邮箱.禁止 = 假
            }
            否则
            {
                编辑框_邮箱.禁止 = 真
            }

        }
        否则 (来源对象 == 选择框_到期日期)
        {
            如果 (来源对象.选中)
            {
                日期框_到期日期.禁止 = 假
            }
            否则
            {
                日期框_到期日期.禁止 = 真
            }

        }
        否则 (来源对象 == 选择框_更新期限)
        {
            如果 (来源对象.选中)
            {
                日期框_更新期限.禁止 = 假
            }
            否则
            {
                日期框_更新期限.禁止 = 真
            }

        }
        否则 (来源对象 == 选择框_运行时限)
        {
            如果 (来源对象.选中)
            {
                编辑框_运行时限.禁止 = 假
            }
            否则
            {
                编辑框_运行时限.禁止 = 真
            }

        }
        否则 (来源对象 == 选择框_机器码)
        {
            如果 (来源对象.选中)
            {
                编辑框_机器码.禁止 = 假
            }
            否则
            {
                编辑框_机器码.禁止 = 真
            }

        }
        否则 (来源对象 == 选择框_用户数据)
        {
            如果 (来源对象.选中)
            {
                编辑框_用户数据.禁止 = 假
            }
            否则
            {
                编辑框_用户数据.禁止 = 真
            }

        }
        返回 (0)
    }

    方法 按钮_被单击 <接收事件 类型 = 整数 注释 = "当按钮被单击后发送此事件" 折叠>
    参数 来源对象 <类型 = 按钮 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        如果 (来源对象 == 按钮_生成序列号)
        {
            如果 (VMP注册机.密钥对是否有效 () == 真)
            {
                生成序列号 ()
            }
            否则
            {
                信息框 ("未导入产品信息，无法生成序列号。\r\n请单击“导入密钥对”按钮，导入由 VMProtect 导出的密钥对。", 信息框按钮.警告图标)

            }

        }
        否则 (来源对象 == 按钮_导入密钥对)
        {
            密钥对窗口.创建弹出子窗口 (本对象)

        }
        返回 (0)
    }

    方法 生成序列号 <类型 = 逻辑型 折叠>
    {
        变量 序列号 <类型 = 文本型>
        变量 用户名 <类型 = 文本型>
        变量 邮箱 <类型 = 文本型>
        变量 到期日期 <类型 = 整数>
        变量 更新期限 <类型 = 整数>
        变量 运行时限 <类型 = 整数>
        变量 机器码 <类型 = 文本型>
        变量 用户数据 <类型 = 字节集类>
        变量 错误码 <类型 = 整数>
        如果 (选择框_用户名.选中)
        {
            用户名 = 编辑框_用户名.内容

        }
        如果 (选择框_邮箱.选中)
        {
            邮箱 = 编辑框_邮箱.内容

        }
        如果 (选择框_到期日期.选中)
        {
            到期日期 = VMP注册机.取VMP日期 (取年份 (日期框_到期日期.今天), 取月份 (日期框_到期日期.今天), 取日 (日期框_到期日期.今天))

        }
        如果 (选择框_更新期限.选中)
        {
            更新期限 = VMP注册机.取VMP日期 (取年份 (日期框_更新期限.今天), 取月份 (日期框_更新期限.今天), 取日 (日期框_更新期限.今天))

        }
        如果 (选择框_运行时限.选中)
        {
            运行时限 = 文本到整数 (编辑框_运行时限.内容)

        }
        如果 (选择框_机器码.选中)
        {
            机器码 = 编辑框_机器码.内容

        }
        如果 (选择框_用户数据.选中)
        {
            用户数据 = 十六进制文本到字节集 (编辑框_用户数据.内容)

        }
        错误码 = VMP注册机.生成序列号 (序列号, 用户名, 邮箱, 到期日期, 更新期限, 运行时限, 机器码, 用户数据)
        如果 (错误码 == 0)
        {
            编辑框_序列号.内容 = 序列号
            返回 (真)
        }
        否则
        {
            信息框 ("生成序列号失败，错误代码为: " + 到文本 (错误码), 信息框按钮.错误图标)
            返回 (假)

        }
    }
}

类 导入密钥对窗口 <公开 基础类 = 窗口 折叠 隐藏值属性 = "0" @视窗.布局 = "client_size = \"580, 380\"" 标题 = "导入密钥对">
{
    变量 按钮_确定 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 101\r\npos = \"290, 331, 120, 40\"" 标题 = "确定">
    变量 按钮_取消 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 102\r\npos = \"435, 331, 120, 40\"" 标题 = "取消">
    变量 编辑框_密钥对 <类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 103\r\npos = \"20, 60, 540, 260\"" 滚动条 = 纵向滚动条
            是否允许多行 = 真>
    变量 组合框_格式 <类型 = 组合框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 104\r\npos = \"20, 20, 540, 24\""
            列表项目 = "KeyGen.dll (MSVC)\n0\nKeyGen.dll (Delphi)\n0\nKeyGen.Net/PayPro Global\n0\nKeygen.php\n0"
            现行选中项 = 0 "类型" = 不可编辑下拉式>
    变量 按钮_导入 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 105\r\npos = \"23, 331, 200, 40\"" 标题 = "从工程文件导入...">

    方法 按钮_被单击 <接收事件 类型 = 整数 注释 = "当按钮被单击后发送此事件" 折叠>
    参数 来源对象 <类型 = 按钮 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        如果 (来源对象 == 按钮_导入)
        {
            变量 工程文件 <类型 = 文本型>
            如果 (通用文件对话框.打开文件 (工程文件, "工程文件(*.vmp)|*.vmp", 取窗口句柄 (), "打开VMP工程文件...") == 假)
            {
                返回 (0)
            }
            如果 (取程序 ().主窗口对象.VMP注册机.导入密钥对文件 (工程文件) == 真)
            {
                信息框 ("导入密钥对成功!", 信息框按钮.信息图标)
                关闭窗口 ()
            }
            否则
            {
                信息框 ("导入密钥对失败!\r\n所打开的VMP工程文件可能没有包含密钥对信息。", 信息框按钮.错误图标)
            }

        }
        否则 (来源对象 == 按钮_确定)
        {
            如果 (取程序 ().主窗口对象.VMP注册机.导入密钥对 (编辑框_密钥对.内容, 组合框_格式.现行选中项) == 真)
            {
                信息框 ("导入密钥对成功!", 信息框按钮.信息图标)
                关闭窗口 ()
            }
            否则
            {
                信息框 ("导入密钥对失败!\r\n请检查密钥对和格式是否正确。", 信息框按钮.错误图标)

            }
        }
        否则 (来源对象 == 按钮_取消)
        {
            关闭窗口 ()

        }
        返回 (0)
    }
}
