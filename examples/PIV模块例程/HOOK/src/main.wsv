<火山程序 类型 = "通常" 版本 = 1 />

包 火山.程序

类 启动类 <公开 基础类 = 窗口程序类 折叠>
{
    变量 主窗口对象 <类型 = 我的主窗口>

    方法 启动方法 <公开 类型 = 整数>
    {
        主窗口对象.创建主窗口 ()
        返回 (1)
    }
}

# ===

类 我的主窗口 <基础类 = 窗口 注释 = "样例主窗口" @视窗.布局 = "client_size = \"439, 279\"" 标题 = "函数钩子测试">
{
    变量 按钮_安装 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 101\r\npos = \"42, 41, 120, 36\"" 标题 = "安装钩子">
    变量 按钮_启用 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 102\r\npos = \"42, 97, 120, 36\"" 标题 = "启用钩子" 禁止 = 真>
    变量 按钮_停用 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 103\r\npos = \"42, 153, 120, 36\"" 标题 = "停用钩子" 禁止 = 真>
    变量 按钮_卸载 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 104\r\npos = \"42, 209, 120, 36\"" 标题 = "卸载钩子" 禁止 = 真>
    变量 按钮_执行 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 105\r\npos = \"218, 113, 180, 50\"" 标题 = "执行函数">
    变量 选择框_多重 <类型 = 选择框 隐藏值属性 = "0" @视窗.布局 = "id = 106\r\npos = \"226, 48, 160, 24\"" 标题 = "使用多重HOOK类">
    变量 ""
    变量 ""
    变量 钩子信息 <静态 类型 = HOOK信息类>
    变量 钩子数组 <静态 类型 = "HOOK信息类 [3]">

    方法 按钮_被单击 <接收事件 类型 = 整数 注释 = "当按钮被单击后发送此事件" 折叠>
    参数 来源对象 <类型 = 按钮 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        变量 状态码 <类型 = MH状态码>
        如果 (选择框_多重.选中 == 假)
        {
            // 一个函数只能安装一个钩子
            如果 (来源对象 == 按钮_安装)
            {
                钩子信息.钩子 = 取静态方法地址 (信息框钩子)
                状态码 = 简易HOOK类.安装API钩子 ("User32.dll", "MessageBoxW", 钩子信息.钩子, 钩子信息.跳板, 钩子信息.目标)
                如果 (状态码 == MH状态码.成功)
                {
                    选择框_多重.禁止 = 真
                    按钮_安装.禁止 = 真
                    按钮_启用.禁止 = 假
                    按钮_卸载.禁止 = 假
                }
                否则
                {
                    调试输出 (取标准格式文本 ("安装钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_启用)
            {
                状态码 = 简易HOOK类.启用钩子 (钩子信息.目标)
                如果 (状态码 == MH状态码.成功)
                {
                    按钮_启用.禁止 = 真
                    按钮_停用.禁止 = 假
                }
                否则
                {
                    调试输出 (取标准格式文本 ("启用钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_停用)
            {
                状态码 = 简易HOOK类.停用钩子 (钩子信息.目标)
                如果 (状态码 == MH状态码.成功)
                {
                    按钮_启用.禁止 = 假
                    按钮_停用.禁止 = 真
                }
                否则
                {
                    调试输出 (取标准格式文本 ("停用钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_卸载)
            {
                状态码 = 简易HOOK类.卸载钩子 (钩子信息.目标)
                如果 (状态码 == MH状态码.成功)
                {
                    选择框_多重.禁止 = 假
                    按钮_安装.禁止 = 假
                    按钮_启用.禁止 = 真
                    按钮_停用.禁止 = 真
                    按钮_卸载.禁止 = 真
                }
                否则
                {
                    调试输出 (取标准格式文本 ("卸载钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_执行)
            {
                信息框 ("启用钩子了吗？")

            }
        }
        // =====
        如果 (选择框_多重.选中 == 真)
        {
            // 可以一个函数安装多个钩子
            如果 (来源对象 == 按钮_安装)
            {
                钩子数组 [0].ID = 1
                钩子数组 [0].钩子 = 取静态方法地址 (信息框钩子1)
                钩子数组 [0].目标 = 进程辅助类.取模块函数地址 ("User32.dll", "MessageBoxW")
                状态码 = 多重HOOK类.安装钩子 (钩子数组 [0].ID, 钩子数组 [0].目标, 钩子数组 [0].钩子, 钩子数组 [0].跳板)

                钩子数组 [1].ID = 2
                钩子数组 [1].钩子 = 取静态方法地址 (信息框钩子2)
                钩子数组 [1].目标 = 钩子数组 [0].目标
                状态码 = 多重HOOK类.安装钩子 (钩子数组 [1].ID, 钩子数组 [1].目标, 钩子数组 [1].钩子, 钩子数组 [1].跳板)

                钩子数组 [2].ID = 3
                钩子数组 [2].钩子 = 取静态方法地址 (信息框钩子3)
                钩子数组 [2].目标 = 钩子数组 [0].目标
                状态码 = 多重HOOK类.安装钩子 (钩子数组 [2].ID, 钩子数组 [2].目标, 钩子数组 [2].钩子, 钩子数组 [2].跳板)

                如果 (状态码 == MH状态码.成功)
                {
                    选择框_多重.禁止 = 真
                    按钮_安装.禁止 = 真
                    按钮_启用.禁止 = 假
                    按钮_卸载.禁止 = 假
                }
                否则
                {
                    调试输出 (取标准格式文本 ("安装多重钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_启用)
            {
                // 注意: 最后启用的一个多重钩子,会被最先运行
                // 所以这里调整了一下启用顺序
                状态码 = 多重HOOK类.启用钩子 (钩子数组 [2].ID, 钩子数组 [2].目标)
                状态码 = 多重HOOK类.启用钩子 (钩子数组 [1].ID, 钩子数组 [1].目标)
                状态码 = 多重HOOK类.启用钩子 (钩子数组 [0].ID, 钩子数组 [0].目标)

                如果 (状态码 == MH状态码.成功)
                {
                    按钮_启用.禁止 = 真
                    按钮_停用.禁止 = 假
                }
                否则
                {
                    调试输出 (取标准格式文本 ("启用多重钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_停用)
            {
                状态码 = 多重HOOK类.停用钩子 (钩子数组 [0].ID, 钩子数组 [0].目标)
                状态码 = 多重HOOK类.停用钩子 (钩子数组 [1].ID, 钩子数组 [1].目标)
                状态码 = 多重HOOK类.停用钩子 (钩子数组 [2].ID, 钩子数组 [2].目标)
                如果 (状态码 == MH状态码.成功)
                {
                    按钮_启用.禁止 = 假
                    按钮_停用.禁止 = 真
                }
                否则
                {
                    调试输出 (取标准格式文本 ("停用多重钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_卸载)
            {
                状态码 = 多重HOOK类.卸载钩子 (钩子数组 [0].ID, 钩子数组 [0].目标)
                状态码 = 多重HOOK类.卸载钩子 (钩子数组 [1].ID, 钩子数组 [1].目标)
                状态码 = 多重HOOK类.卸载钩子 (钩子数组 [2].ID, 钩子数组 [2].目标)
                如果 (状态码 == MH状态码.成功)
                {
                    选择框_多重.禁止 = 假
                    按钮_安装.禁止 = 假
                    按钮_启用.禁止 = 真
                    按钮_停用.禁止 = 真
                    按钮_卸载.禁止 = 真
                }
                否则
                {
                    调试输出 (取标准格式文本 ("卸载多重钩子失败: {}", 简易HOOK类.取状态码描述 (状态码)))

                }

            }
            否则 (来源对象 == 按钮_执行)
            {
                信息框 ("启用多重钩子了吗？")
            }

        }
        返回 (0)
    }

    方法 信息框钩子 <静态 类型 = 整数 折叠>
    参数 窗口句柄 <类型 = 变整数>
    参数 内容 <类型 = 变整数>
    参数 标题 <类型 = 变整数>
    参数 标志 <类型 = 整数>
    {
        // 可以执行任意代码
        变量 内容文本 <类型 = 文本型>
        内容文本 = 指针到文本 (内容)
        加入文本 (内容文本, "\r\n是的，已被挂钩!!!")
        返回 (调用静态方法 (钩子信息.跳板, 整数, 窗口句柄, 取文本指针 (内容文本), 取文本指针 ("简易HOOK类"), 标志))
    }

    方法 信息框钩子1 <静态 类型 = 整数 折叠>
    参数 窗口句柄 <类型 = 变整数>
    参数 内容 <类型 = 变整数>
    参数 标题 <类型 = 变整数>
    参数 标志 <类型 = 整数>
    {
        变量 内容文本 <类型 = 文本型>
        内容文本 = 指针到文本 (内容)
        加入文本 (内容文本, "\r\n我是第一个钩子!!!")
        返回 (调用静态方法 (钩子数组 [0].跳板, 整数, 窗口句柄, 取文本指针 (内容文本), 取文本指针 ("简易HOOK类"), 标志))
    }

    方法 信息框钩子2 <静态 类型 = 整数 折叠>
    参数 窗口句柄 <类型 = 变整数>
    参数 内容 <类型 = 变整数>
    参数 标题 <类型 = 变整数>
    参数 标志 <类型 = 整数>
    {
        变量 内容文本 <类型 = 文本型>
        内容文本 = 指针到文本 (内容)
        加入文本 (内容文本, "\r\n我是第二个钩子!!!")
        返回 (调用静态方法 (钩子数组 [1].跳板, 整数, 窗口句柄, 取文本指针 (内容文本), 取文本指针 ("简易HOOK类"), 标志))
    }

    方法 信息框钩子3 <静态 类型 = 整数 折叠>
    参数 窗口句柄 <类型 = 变整数>
    参数 内容 <类型 = 变整数>
    参数 标题 <类型 = 变整数>
    参数 标志 <类型 = 整数>
    {
        变量 内容文本 <类型 = 文本型>
        内容文本 = 指针到文本 (内容)
        加入文本 (内容文本, "\r\n我是第三个钩子!!!")
        返回 (调用静态方法 (钩子数组 [2].跳板, 整数, 窗口句柄, 取文本指针 (内容文本), 取文本指针 ("简易HOOK类"), 标志))
    }
}
