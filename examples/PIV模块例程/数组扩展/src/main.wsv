<火山程序 类型 = "通常" 版本 = 1 />

包 火山.程序

类 启动类 <公开 基础类 = 窗口程序类 折叠>
{
    变量 主窗口对象 <类型 = 我的主窗口>

    方法 启动方法 <公开 类型 = 整数>
    {
        主窗口对象.创建主窗口 ()
        返回 (1)
    }
}

# ===

类 我的主窗口 <基础类 = 窗口 注释 = "样例主窗口" @视窗.布局 = "client_size = \"500, 300\"" 标题 = "数组扩展操作">
{
    变量 "//按钮_序列化" <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 101\r\npos = \"45, 115, 160, 36\"" 标题 = "对象数组序列化">
    变量 按钮_扩展 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 102\r\npos = \"45, 43, 160, 36\"" 标题 = "数组扩展方法">

    方法 按钮_被单击 <接收事件 类型 = 整数 注释 = "当按钮被单击后发送此事件">
    参数 来源对象 <类型 = 按钮 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        如果 (来源对象 == 按钮_扩展)
        {
            扩展语法实例 ()

            变量 JSON <类型 = PivJSON>
            JSON.成员 (1).置文本 ("dfdf")


        }
        // 否则 (来源对象 == 按钮_序列化)
        {
            // 对象数组序列化 ()

        }
        返回 (0)
    }

    方法 扩展语法实例 <折叠>
    {
        // 用初始化值创建数组
        变量 整数数组 <类型 = 整数数组类>
        变量 文本数组 <类型 = 文本数组类>
        变量 字节集数组 <类型 = 字节集数组类>
        整数数组 = 数组P.创建数组类 (整数数组类, 12, 4, 54, 67, 8, 229, 29, 49, 5, 6, 456, 2)
        文本数组 = 数组P.创建数组类 (文本数组类, "火山", "视窗", "安卓", "模块", "组件")
        字节集数组 = 数组P.创建数组类 (字节集数组类, 创建字节集 (7, 88, 99), 文本到多字节 ("无言", 假), 十六进制文本到字节集 ("0D0AEEFFO3"))

        // 连续加入成员
        数组P.连续加入成员 (整数数组, 99, 123, 789)
        数组P.连续加入成员 (文本数组, "利快云", "精易")
        数组P.连续加入成员 (字节集数组, 创建字节集 (1, 2, 3), 到字节集 (89742))

        // 输出
        调试输出 (数组P.展示数组 (整数数组))
        调试输出 (数组P.展示数组 (文本数组))
        调试输出 (字节集数组)

        // 求和 (不支持对象数组)
        调试输出 ("数组的数值相加", 数组P.求和 (整数数组, 整数))
        调试输出 ("数组的文本相加", 数组P.求和 (文本数组, 文本型))

        // 求最小值 (不支持对象数组)
        调试输出 ("数值数组的最小值", 数组P.求最小值 (整数数组, 整数))
        调试输出 ("文本数组的最小值", 数组P.求最小值 (文本数组, 文本型))

        // 求最大值 (不支持对象数组)
        调试输出 ("数值数组的最大值", 数组P.求最大值 (整数数组, 整数))
        调试输出 ("文本数组的最大值", 数组P.求最大值 (文本数组, 文本型))

        // 取数组前面
        调试输出 ("提取数组前面", 数组P.取数组前面 (整数数组, 3))

        // 取数组后面
        调试输出 ("提取数组后面", 数组P.取数组前面 (文本数组, 3))

    }

    方法 "//对象数组序列化" <注释 = "对象数组类的序列化" 折叠>
    {
        // 支持“对象数组类”和基于“对象数组模板类”的自定义数组类
        变量 模块数组 <类型 = 模块快照数组类>
        变量 数组数据 <类型 = 字节集类>
        // 将当前进程的模块信息获取到数组中
        快照辅助类.枚举模块信息 (0, 模块数组)

        // 将对象数组类的内容保存为字节集
        数组数据 = 数组P.取对象数组数据 (模块数组)
        // 调试输出 (数组数据)

        变量 模块数组2 <类型 = 模块快照数组类>
        // 将数组的字节集数据写入到数组类中
        // 第三个参数填对象数组类的"成员类型"
        如果 (数组P.置对象数组数据 (模块数组2, 数组数据, 模块快照类) == 真)
        {
            调试输出 (数组P.取数组前面 (模块数组2, 5))
        }
        否则
        {
            调试输出 ("置对象数组数据失败")

        }

    }
}
