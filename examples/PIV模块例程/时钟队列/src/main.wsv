<火山程序 类型 = "通常" 版本 = 1 />

包 火山.程序

类 启动类 <公开 基础类 = 窗口程序类 折叠>
{
    变量 主窗口对象 <公开 类型 = 我的主窗口>

    方法 启动方法 <公开 类型 = 整数 折叠>
    {
        主窗口对象.创建主窗口 ()
        返回 (1)
    }
}

# ===

类 我的主窗口 <基础类 = 窗口 注释 = "样例主窗口" @视窗.布局 = "client_size = \"700, 500\"" 标题 = "时钟测试">
{
    变量 按钮_添加 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 101\r\npos = \"20, 43, 160, 32\"" 标题 = "添加时钟">
    变量 按钮_添加2 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 102\r\npos = \"20, 98, 160, 32\"" 标题 = "添加时钟_静态方法">
    变量 按钮_移除 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 103\r\npos = \"20, 210, 160, 32\"" 标题 = "移除一个时钟">
    变量 编辑框_输出 <公开 类型 = 编辑框 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 104\r\npos = \"205, 19, 472, 456\"" 是否允许多行 = 真
            滚动条 = 纵向滚动条 输入方式 = 只读方式>
    变量 按钮_添加3 <类型 = 按钮 折叠2 隐藏值属性 = "0" @视窗.布局 = "id = 105\r\npos = \"20, 153, 160, 32\"" 标题 = "添加时钟_阻塞">
    变量 ""
    变量 时钟队列 <类型 = 时钟队列类2>

    方法 按钮_被单击 <接收事件 类型 = 整数 注释 = "当按钮被单击后发送此事件" 折叠>
    参数 来源对象 <类型 = 按钮 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    {
        变量 时钟序号 <类型 = 变整数>
        如果 (来源对象 == 按钮_添加)
        {
            变量 标准随机数 <类型 = 标准随机数类>
            // 添加一个时钟,以周期事件运行
            时钟序号 = 时钟队列.添加时钟 (2000, 0, 标准随机数.取随机整数 ())
            如果 (时钟序号 == -1)
            {
                编辑框_输出.加入文本行 ("添加周期事件时钟失败。")
            }
            否则
            {
                编辑框_输出.加入文本行 (取格式文本 ("添加了一个周期事件时钟，序号: %d", 时钟序号))

            }
        }
        否则 (来源对象 == 按钮_添加2)
        {
            变量 标准随机数 <类型 = 标准随机数类>
            // 添加一个时钟,以自定义的静态方法运行
            时钟序号 = 时钟队列.添加时钟2 (时钟回调, 3000, 1000, 标准随机数.取随机整数 ())
            如果 (时钟序号 == -1)
            {
                编辑框_输出.加入文本行 ("添加静态回调时钟失败。")
            }
            否则
            {
                编辑框_输出.加入文本行 (取格式文本 ("添加了一个静态回调时钟，序号: %d", 时钟序号))
            }

        }
        否则 (来源对象 == 按钮_添加3)
        {
            变量 标准随机数 <类型 = 标准随机数类>
            // 添加一个时钟,周期事件之间阻塞运行
            时钟序号 = 时钟队列.添加时钟 (2000, 0, 标准随机数.取随机整数 (), 假)
            如果 (时钟序号 == -1)
            {
                编辑框_输出.加入文本行 ("添加阻塞运行时钟失败。")
            }
            否则
            {
                编辑框_输出.加入文本行 (取格式文本 ("添加了一个阻塞运行时钟，序号: %d", 时钟序号))
            }

        }
        否则 (来源对象 == 按钮_移除)
        {
            // 移除最早添加的一个时钟
            变量 有效索引 <类型 = 整数 值 = -1>
            计次循环 (时钟队列.取添加时钟数 ())  // 获取第一个有效的时钟序号
            {
                如果 (时钟队列.时钟是否有效 (取循环索引 ()))
                {
                    有效索引 = 取循环索引 ()
                    跳出循环

                }

            }
            如果 (有效索引 == -1)
            {
                信息框 ("当前无运行中的时钟。", 信息框按钮.警告图标)
            }
            否则
            {
                时钟队列.移除时钟 (有效索引, 0)
                编辑框_输出.加入文本行 (取格式文本 ("移除了一个时钟 序号: %d", 有效索引))

            }

        }
        返回 (0)
    }

    方法 时钟回调 <静态>
    参数 用户数据 <类型 = 变整数 注释 = "为\"添加时钟2\"时所提供的用户数据值">
    参数 等待超时 <类型 = 字节 注释 = "时钟回调中此参数始终为1,无用处.">
    {
        取程序 ().主窗口对象.编辑框_输出.加入文本行 (取格式文本 ("时钟回调(3秒) 用户数据: %I64d，", 用户数据) + 时间到文本 (取现行时间 (), 时间转换部分.时间部分))
        延时 (3000)  // 加上延时3秒也不会影响下一个事件的运行
    }

    方法 时钟队列类2_周期事件 <接收事件 类型 = 整数 注释 = "每当经过了指定的时钟周期,将发送本事件." 返回值注释 = "此返回值无意义.">
    参数 来源对象 <类型 = 时钟队列类2 注释 = "提供事件产生的具体来源对象">
    参数 标记值 <类型 = 整数 注释 = "用户调用\"挂接事件\"命令时所提供的\"标记值\"参数值,非此方式挂接事件则本参数值固定为0.">
    参数 时钟序号 <类型 = 整数 注释 = "提供周期事件的来源时钟序号(从0开始),该序号跟\"添加时钟\"返回的值一样.">
    参数 用户数据 <类型 = 变整数 注释 = "用户在\"添加时钟\"时传入的参数.">
    {
        如果 (来源对象 == 时钟队列)
        {
            编辑框_输出.加入文本行 (取格式文本 ("周期事件(2秒) 序号: %d，用户数据: %I64d，", 时钟序号, 用户数据) + 时间到文本 (取现行时间 (), 时间转换部分.时间部分))
            延时 (5000)  // 加上延时5秒也不会影响下一个事件的运行

        }
        返回 (0)
    }
}
